--- src/VBox/Devices/Makefile.kmk.orig	2019-11-21 17:00:01 UTC
+++ src/VBox/Devices/Makefile.kmk
@@ -112,6 +112,7 @@ if !defined(VBOX_ONLY_EXTPACKS)
   VBoxDDU_LDFLAGS.darwin += -framework IOKit
  endif
 
+ VBoxDDU_LDFLAGS.freebsd  = $(VBOX_GCC_NO_UNDEFINED)
  VBoxDDU_LDFLAGS.linux    = $(VBOX_GCC_NO_UNDEFINED)
  $(call VBOX_SET_VER_INFO_DLL,VBoxDDU,VirtualBox VMM Devices and Drivers Utilities)
 
@@ -241,6 +242,7 @@ if !defined(VBOX_ONLY_EXTPACKS) && "$(intersects $(KBU
  	-framework Carbon \
  	-framework DiskArbitration \
  	-framework SystemConfiguration
+ VBoxDD_LDFLAGS.freebsd  = $(VBOX_GCC_NO_UNDEFINED)
  VBoxDD_LDFLAGS.linux    = $(VBOX_GCC_NO_UNDEFINED)
 
  # --- Tracing bits. ---
@@ -283,7 +285,7 @@ if !defined(VBOX_ONLY_EXTPACKS) && "$(intersects $(KBU
   VBoxDD_SOURCES        += Graphics/DevVGA-SVGA.cpp
  endif
  ifdef VBOX_WITH_VMSVGA3D
-  if1of ($(KBUILD_TARGET), linux win)
+  if1of ($(KBUILD_TARGET), freebsd linux win)
 # Dynamically load 3D library (opengl32, libGL).
 # This is a temporary solution. In future the 3D backend will be in a separate library.
 VBOX_WITH_VMSVGA3D_DYNAMIC_LOAD = 1
@@ -324,6 +326,7 @@ VBOX_WITH_VMSVGA3D_DYNAMIC_LOAD = 1
    VBoxDD_SOURCES       += \
    	Graphics/DevVGA-SVGA3d-glLdr.cpp
    else
+   VBoxDD_LIBS.freebsd  += X11 GL
    VBoxDD_LIBS.linux    += X11 GL
    VBoxDD_LIBS.win      += $(PATH_SDK_$(VBOX_WINPSDK)_LIB)/Opengl32.lib
    endif
@@ -1516,6 +1519,8 @@ if defined(VBOX_WITH_VMSVGA3D) && !defined(VBOX_ONLY_E
  VBoxSVGA3D_INCS = $(VBOX_GRAPHICS_INCS)
  VBoxSVGA3D_INCS.win    := \
  	Graphics/shaderlib/libWineStub/include
+ VBoxSVGA3D_INCS.freebsd := \
+ 	Graphics/shaderlib/wine/include
  VBoxSVGA3D_INCS.linux  := \
  	Graphics/shaderlib/wine/include
  VBoxSVGA3D_INCS.darwin := \
